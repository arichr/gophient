name: Package builder

on:
  workflow_run:
    workflows: [Python validator (main/dev)]
    types: [completed]

jobs:
  build:

    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Build a package
        run: |
          source .venv/bin/activate
          poetry build

      - name: Publish as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: Wheel (Python ${{ matrix.python-version }})
          path: dist/gophient-*-py3-none-any.whl
